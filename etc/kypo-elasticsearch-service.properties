# context
server.servlet.context-path=/kypo-elasticsearch-service/api/v1
server.port=8085
## microservice name which is used in user management service for identification of this service, e.g. kypo2-training
microservice.name=kypo-elasticsearch-service

# calling user-and-group project
user-and-group-server.uri=http://localhost:8084/kypo2-rest-user-and-group/api/v1
# calling kypo2-openstack
openstack-server.uri=http://localhost:8080/kypo-openstack/api/v1

swagger.enabled=true

# Jackson (e.g. converting Java 8 dates to ISO format
spring.jackson.serialization.write_dates_as_timestamps=false
spring.jackson.property-naming-strategy=SNAKE_CASE

# spring-cloud
spring.cloud.refresh.enabled = false

# to fix: Method jmxMBeanExporter in org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration required a single bean, but 2 were found: (objMapperESClient,objectMapperForRestAPI)
spring.jmx.enabled = false

# OpenID Connect OIDC configuration settings for a resource servers configuration
# Add configuration values for your OIDC providers. If you want to run application properly, make sure that all values are in the same order.
# First OIDC provider is used for authorization in swagger page
## OIDC issuers, e.g. MUNI OIDC and another proprietary OIDC authorization server, e.g., https://oidc.muni.cz/oidc/, https://kypo-oidc-idp.cz/oidc/
kypo.idp.4oauth.issuers={OIDC issuer URIs}
## the addresses of authorization servers where the resource service is checking incoming token from a client based on iss field in token, e.g. https://oidc.muni.cz/oidc/introspect, https://kypo-oidc-idp.cz/oidc/introspect
kypo.idp.4oauth.introspectionURIs={URLs to authorization servers introspect endpoint}
## the identification of a resource service using client IDs
kypo.idp.4oauth.resource.clientIds={your client IDs from Self-service protected resource}
## the identification of a resource service using client secrets
kypo.idp.4oauth.resource.clientSecrets={your client secrets from Self-service protected resource}

# OpenID Connection MUNI OIDC configuration settings for a client configuration
## the addresses of authorization servers where the client is getting a token, e.g., https://oidc.muni.cz/oidc/authorize, https://kypo-oidc-idp.cz/oidc/authorize
kypo.idp.4oauth.authorizationURIs={URLs to authorization server authorize endpoint}
## the identification of client using his client IDs
kypo.idp.4oauth.client.clientIds={your client IDs from Self-service client}
## the scopes that authorization servers will provide for a given user, e.g., openid, profile, email
kypo.idp.4oauth.scopes=openid, profile, email

management.health.refresh.enabled=false

security.require-ssl=false
javax.net.debug=ssl

## overwrite default logback configuration file, e.g., /etc/kypo/logback.xml, NOT REQUIRED
#logging.config={path to logback config file}
## set logger levels using pattern logging.level.<logger-name>=<level>, NOT REQUIRED
logging.level.cz.muni.ics=WARN

# Elasticsearch settings
## communication protocol for Elasticsearch, e.g. http or https
elasticsearch.protocol=http
## IP address where Elasticsearch is running, e.g. localhost
elasticsearch.host=localhost
## Port on which Elasticsearch is running, e.g. 9200 is default
elasticsearch.port=9200
